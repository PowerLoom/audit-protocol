{
	"info": {
		"_postman_id": "3f4dff83-f908-4c93-95ae-66e081a93b46",
		"name": "Postman Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19657769"
	},
	"item": [
		{
			"name": "Register Projects",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n        \"project1\",\n        \"project2\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9000/registerProjects",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"registerProjects"
					]
				},
				"description": "This API takes in a list of projects and registers them for submission of snapshots. Without the project registration, snapshot submission would be rejected."
			},
			"response": []
		},
		{
			"name": "Commit Payload",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"payload\": '{'Hello':'My Data', 'Bye':'JAJAJAJA'}',\n    \"projectId\": \"project1\"\n    \"sourceChainDetails\":{\n        \"chainID\":1,\n        \"epochStartHeight\":16633021,\n        \"epochEndHeight\": 16633030\n    }\n}  \n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9000/commit_payload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"commit_payload"
					]
				},
				"description": "This API takes in a payload for a project to be committed and stored as part of DAG chain of snapshots.\n\nSourceChainDetails indicate the data source from where data is being snapshotted e.g: ethereum and epochStart and endHeight indicate the block heights in between which the current snapshot has been generated from."
			},
			"response": [
				{
					"name": "Commit Payload",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payload\":\"Payload A\",\n    \"projectId\": 20\n\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/commit_payload",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"commit_payload"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "date",
							"value": "Mon, 23 Nov 2020 06:34:12 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "21"
						},
						{
							"key": "content-type",
							"value": "text/plain; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "Internal Server Error"
				}
			]
		},
		{
			"name": "Get Current Height of project",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/project1/payloads/height",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"project1",
						"payloads",
						"height"
					]
				},
				"description": "This API returns the current finalized Height of a project.\n\n**Response Structure:**\n\n``` json\n{\n\"height\": max_block_height\n}\n\n\n```"
			},
			"response": [
				{
					"name": "Height of projectId",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9000/2/payload/height",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"2",
								"payload",
								"height"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Mon, 23 Nov 2020 06:35:10 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "13"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"height\": -1\n}"
				}
			]
		},
		{
			"name": "Get block at particular Height",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/project1/payload/25",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"project1",
						"payload",
						"25"
					]
				},
				"description": "This API returns the DAG block at a particular height for the project.\n\n**Response Structure:**\n\n``` json\n{\n    \"bafyxxxxx\": {\n        \"data\": {\n            \"cid\": {\n                \"/\": \"bafkreicvx4547amf35oe5oci5jzomk2tky7a6uvmq3345sodo2djcibzfi\"\n            }\n        },\n        \"height\": 40,\n        \"prevCid\": {\n            \"/\": \"bafyreigldjammrkx2jvu23bklxsspatqfheikukbwt2cta2bqu5j4nwlb4\"\n        },\n        \"timestamp\": 1658406631,\n        \"txHash\": \"0x411d675990454b72de13189314083ba1cb9562d89d2ebb8334ec95f43963174c\"\n    }\n}\n\n```"
			},
			"response": [
				{
					"name": "get block",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9000/21/payload/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"21",
								"payload",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Mon, 23 Nov 2020 06:35:10 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "355"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"bafyreid57xngfu5vpkr5d7qnm5wlqzjf6ae4mpkp7oxmvi7roao4yjsmpe\": {\n        \"Data\": {\n            \"Cid\": \"QmXGrrs1TQdc12xpohLxU1RDVaEorg1t2nVYdsFP1WaUdz\",\n            \"Size\": \"17\",\n            \"Type\": \"HOT_IPFS\"\n        },\n        \"Height\": 1,\n        \"Timestamp\": \"20201121210830626638\",\n        \"TxHash\": \"0x3a57f3b226a9bd0cea152eceb7c40ede6d56c6cedc113a6beca9b525724d3958\",\n        \"prevCid\": \"bafyreic326l7esutjyygzfcd6ca2ikfr6hcvsw6tajwkpf7q3fdum36frm\"\n    }\n}"
				}
			]
		},
		{
			"name": "Get data at a block height",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/projct1/payload/25/data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"projct1",
						"payload",
						"25",
						"data"
					]
				},
				"description": "This API fetches the DAG block along with the payload DATA at particular height for the project.\n\nResponse Structure:\n\n``` json\n{\n    \"bafyxxxxx\": {\n        \"data\": {\n            \"cid\": \"bafkreicvx4547amf35oe5oci5jzomk2tky7a6uvmq3345sodo2djcibzfi\",\n            \"payload\": {\n                \"Hello\":\"My Data\", \n                 \"Bye\":\"JAJAJAJA\"\n            }\n        },\n        \"height\": 40,\n        \"prevCid\": {\n            \"/\": \"bafyreigldjammrkx2jvu23bklxsspatqfheikukbwt2cta2bqu5j4nwlb4\"\n        },\n        \"timestamp\": 1658406631,\n        \"txHash\": \"0x411d675990454b72de13189314083ba1cb9562d89d2ebb8334ec95f43963174c\"\n    }\n}\n\n```"
			},
			"response": [
				{
					"name": "Get data at a block",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9000/21/payload/2/data",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"21",
								"payload",
								"2",
								"data"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Mon, 23 Nov 2020 06:35:21 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "173"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"bafyreicig6tihm6mjynnd25yqh2yzvh47hejie4btayb744kltf2qrmzly\": {\n        \"Cid\": \"Qmd8N2nQh1WCLBWRSeNvMwbb8hWXYeBHQkBECvXyiRnVRK\",\n        \"Size\": \"18\",\n        \"Type\": \"HOT_IPFS\",\n        \"payload\": \"Payload kA\"\n    }\n}"
				}
			]
		},
		{
			"name": "Get blocks in a range",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9000/3/payloads?from_height=19&to_height=20&data=false",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"3",
						"payloads"
					],
					"query": [
						{
							"key": "from_height",
							"value": "19"
						},
						{
							"key": "to_height",
							"value": "20"
						},
						{
							"key": "data",
							"value": "false"
						}
					]
				},
				"description": "Get DAG blocks between 2 project heights. If data flag is set to true, the data would also be returned for each block.\n\n**Response Structure:**\n\n``` json\n[\n    {\n        \"bafyxxxxx\": {\n            \"data\": {\n                \"cid\": {\n                    \"/\": \"bafkreixxxxx\"\n                }\n            },\n            \"height\": 19,\n            \"prevCid\": {\n                \"/\": \"bafyyyyyyyy\"\n            },\n            \"timestamp\": 1658406631,\n            \"txHash\": \"\"\n        }\n    },\n    {\n        \"bafyxxxxx\": {\n            \"data\": {\n                \"cid\": {\n                    \"/\": \"bafkreyyyyy\"\n                }\n            },\n            \"height\": 20,\n            \"prevCid\": {\n                \"/\": \"bafyxxxxxxxx\"\n            },\n            \"timestamp\": 1658406731,\n            \"txHash\": \"\"\n        }\n    }\n]\n\n```"
			},
			"response": [
				{
					"name": "Get blocks in a range",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9000/20/payloads?from_height=0&to_height=0&data=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"20",
								"payloads"
							],
							"query": [
								{
									"key": "from_height",
									"value": "0"
								},
								{
									"key": "to_height",
									"value": "0"
								},
								{
									"key": "data",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Mon, 23 Nov 2020 06:35:21 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "318"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"bafyreihbescb4iwyj4lbi6x6fkhkr4hzwpxeycbt4vonofqmo7g76kecre\": {\n        \"Data\": {\n            \"Cid\": \"QmXGrrs1TQdc12xpohLxU1RDVaEorg1t2nVYdsFP1WaUdz\",\n            \"Size\": \"17\",\n            \"Type\": \"HOT_IPFS\",\n            \"payload\": \"Payload A\"\n        },\n        \"Height\": 0,\n        \"Timestamp\": \"20201121210315039101\",\n        \"TxHash\": \"0x3997bd12e1ee305856df281aad39afe0a7d6021055a3c86f4c8bcba724c31eb6\",\n        \"prevCid\": \"\"\n    }\n}"
				}
			]
		}
	]
}